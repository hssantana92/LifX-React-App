{"ast":null,"code":"import _classCallCheck from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from\"react\";import{withStyles}from'@material-ui/core/styles';import Slider from'@material-ui/core/Slider';import Typography from'@material-ui/core/Typography';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledSlider=withStyles({root:{color:\"white\"},track:{height:\"1px\",background:\"linear-gradient(90deg, rgba(255,109,0,1) 0%, rgba(255,166,32,1) 16%, rgba(255,198,72,1) 32%, rgba(255,207,151,1) 48%, rgba(254,233,157,1) 64%, rgba(254,248,224,1) 80%, rgba(255,255,255,1) 96%)\"},rail:{background:\"linear-gradient(90deg, rgba(255,109,0,1) 0%, rgba(255,166,32,1) 16%, rgba(255,198,72,1) 32%, rgba(255,207,151,1) 48%, rgba(254,233,157,1) 64%, rgba(254,248,224,1) 80%, rgba(255,255,255,1) 96%)\",height:\"10px\"},thumb:{marginTop:.01,border:\"1px solid grey\",color:\"black\",backgroundColor:\"white\"}})(Slider);var DisplayColor=/*#__PURE__*/function(_Component){_inherits(DisplayColor,_Component);var _super=_createSuper(DisplayColor);function DisplayColor(){var _this;_classCallCheck(this,DisplayColor);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={lightColor:\"3500\",lightInfo:_this.props.data.lightInfo};return _this;}_createClass(DisplayColor,[{key:\"switchColor\",value:function switchColor(){// Set constants for Light ID and Array Index\nvar arrIndex=this.props.data.lightLabels.indexOf(this.props.name);var lightID=this.props.data.lightInfo[arrIndex]['id'];// Set API Call URL\nvar urlState=\"https://api.lifx.com/v1/lights/\".concat(lightID,\"/state\");// Set data to be updated depending on the selected value on the slider\nvar data={\"color\":{\"kelvin\":this.state.lightColor}};// CALL API\nfetch(urlState,{method:'PUT',headers:{'Authorization':this.props.data.token,'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){return response.json();}).then(function(lightState){console.log(lightState['results']);}).catch(function(error){console.error(error);});// Update State Object\nthis.updateColorValue(this.state.lightColor,arrIndex);// Update Parent State\nthis.updateParentState();}// Method to change the value of the color key\n},{key:\"updateColorValue\",value:function updateColorValue(colorVal,index){var lightInfo=this.state.lightInfo;lightInfo[index]['color']['kelvin']=colorVal;this.setState({lightInfo:lightInfo});}// Updates the main light state in the parent component\n},{key:\"updateParentState\",value:function updateParentState(){this.props.onGetChildState(this.state.lightInfo);}},{key:\"valuetext\",value:function valuetext(value){return value;}},{key:\"sliderChange\",value:function sliderChange(event,value){console.log(value);this.setState({lightColor:value});this.switchColor();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{id:\"non-linear-slider\",gutterBottom:true,children:\"Switch Color\"}),/*#__PURE__*/_jsx(StyledSlider,{defaultValue:this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['color']['kelvin'],getAriaValueText:this.valuetext.bind(this),onChangeCommitted:this.sliderChange.bind(this),\"aria-labelledby\":\"discrete-slider-small-steps\",step:500,marks:true,min:1500,max:4500,valueLabelDisplay:\"off\"})]});}}]);return DisplayColor;}(Component);export default DisplayColor;","map":{"version":3,"sources":["C:/Users/61423/Documents/GitHub/hsantana92.github.io/src/DisplayColor/DisplayColor.js"],"names":["Component","withStyles","Slider","Typography","StyledSlider","root","color","track","height","background","rail","thumb","marginTop","border","backgroundColor","DisplayColor","state","lightColor","lightInfo","props","data","arrIndex","lightLabels","indexOf","name","lightID","urlState","fetch","method","headers","token","body","JSON","stringify","then","response","json","lightState","console","log","catch","error","updateColorValue","updateParentState","colorVal","index","setState","onGetChildState","value","event","switchColor","valuetext","bind","sliderChange"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst StyledSlider = withStyles({\r\n    root: {\r\n      color: \"white\"\r\n    },\r\n    track: {\r\n        height: \"1px\",\r\n        background: \"linear-gradient(90deg, rgba(255,109,0,1) 0%, rgba(255,166,32,1) 16%, rgba(255,198,72,1) 32%, rgba(255,207,151,1) 48%, rgba(254,233,157,1) 64%, rgba(254,248,224,1) 80%, rgba(255,255,255,1) 96%)\",\r\n    },\r\n    rail: {\r\n        background: \"linear-gradient(90deg, rgba(255,109,0,1) 0%, rgba(255,166,32,1) 16%, rgba(255,198,72,1) 32%, rgba(255,207,151,1) 48%, rgba(254,233,157,1) 64%, rgba(254,248,224,1) 80%, rgba(255,255,255,1) 96%)\",\r\n        height: \"10px\",\r\n    },\r\n    thumb: {\r\n        marginTop: .01,\r\n        border: \"1px solid grey\",\r\n        color: \"black\",\r\n        backgroundColor: \"white\"\r\n    },\r\n\r\n\r\n  })(Slider);\r\n\r\n\r\n\r\nclass DisplayColor extends Component{\r\n    state = {\r\n        lightColor: \"3500\",\r\n        lightInfo: this.props.data.lightInfo\r\n    }\r\n\r\n\r\n    switchColor(){     \r\n        // Set constants for Light ID and Array Index\r\n        const arrIndex = this.props.data.lightLabels.indexOf(this.props.name)\r\n        const lightID = this.props.data.lightInfo[arrIndex]['id'];   \r\n\r\n        // Set API Call URL\r\n        const urlState = `https://api.lifx.com/v1/lights/${lightID}/state`;\r\n\r\n        // Set data to be updated depending on the selected value on the slider\r\n        const data = {\r\n            \"color\": {\r\n                \"kelvin\": this.state.lightColor\r\n            }\r\n        }\r\n\r\n        // CALL API\r\n        fetch(urlState, {   \r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': this.props.data.token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n          })\r\n            .then(response => response.json())\r\n            .then((lightState) => {\r\n                console.log(lightState['results'])\r\n              })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n\r\n            // Update State Object\r\n            this.updateColorValue(this.state.lightColor, arrIndex)\r\n\r\n            // Update Parent State\r\n            this.updateParentState()\r\n    }\r\n\r\n    // Method to change the value of the color key\r\n    updateColorValue(colorVal, index){\r\n        let lightInfo = this.state.lightInfo;\r\n        lightInfo[index]['color']['kelvin'] = colorVal;\r\n        this.setState({lightInfo : lightInfo})\r\n    }\r\n\r\n    // Updates the main light state in the parent component\r\n    updateParentState(){\r\n        this.props.onGetChildState(this.state.lightInfo);\r\n    }\r\n\r\n    valuetext(value) {\r\n        return value;\r\n    }\r\n\r\n    sliderChange(event, value){\r\n        console.log(value)\r\n        this.setState({\r\n            lightColor: value\r\n        })\r\n        this.switchColor()\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {/* <Button variant=\"primary\" onClick={this.switchColor.bind(this)}>Switch Colour</Button> */}\r\n                <Typography id=\"non-linear-slider\" gutterBottom>\r\n                    Switch Color\r\n                </Typography>\r\n                <StyledSlider\r\n                    defaultValue={this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['color']['kelvin']}\r\n                    getAriaValueText={this.valuetext.bind(this)}\r\n                    onChangeCommitted={this.sliderChange.bind(this)}\r\n                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                    step={500}\r\n                    marks\r\n                    min={1500}\r\n                    max={4500}\r\n                    valueLabelDisplay=\"off\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayColor;"]},"metadata":{},"sourceType":"module"}