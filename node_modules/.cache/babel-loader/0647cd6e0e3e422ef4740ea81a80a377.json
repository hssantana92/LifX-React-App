{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\61423\\\\Documents\\\\React Apps\\\\lifx-react\\\\my-app\\\\src\\\\ListLights\\\\ListLights.js\";\nimport { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar token = \"Bearer c21a99f98f3d64bce53933d23097cbd4fb880ecf476037f82be4c85eb84ce344\";\n\nclass ListLights extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lightInfo: \"\",\n      lightLabels: []\n    };\n  }\n\n  fetchData() {}\n\n  componentDidMount() {\n    const url = \"https://api.lifx.com/v1/lights/all\";\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Authorization': token\n      }\n    }).then(response => response.json()).then(lightProps => {\n      console.log(lightProps.length);\n      console.log(lightProps[0]['label']);\n      this.setState({\n        lightInfo: lightProps\n      });\n\n      for (let i = 0; i < this.state.lightInfo.length; i++) {\n        var joined = this.state.lightLabels.concat(this.state.lightInfo[i]['label']);\n        console.log(this.state.lightInfo[i]['label'], \"test\");\n        this.setState({\n          lightLabels: joined\n        });\n      }\n\n      console.log(this.state.lightLabels);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"1\",\n      children: [this.state.lightLables.map(listitem => /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n            as: button,\n            variant: \"link\",\n            eventKey: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n            as: Button,\n            variant: \"link\",\n            eventKey: \"0\",\n            children: \"Click me!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: \"0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: \"Hello! I'm the body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n    /* <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n            <div className=\"col col-md-2\">\r\n                <Button variant=\"primary\" onClick={this.fetchData.bind(this)}>List Lights</Button>\r\n                <p></p>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.lightLabels.map(listitem => (\r\n                        <li className=\"list-group-item list-group-item-primary\">\r\n                            {listitem}\r\n                        </li>\r\n                        ))}\r\n                    </ul>\r\n                <p></p>\r\n               \r\n            </div>\r\n        </div>\r\n    </div> */\n    ;\n  }\n\n}\n\nexport default ListLights;","map":{"version":3,"sources":["C:/Users/61423/Documents/React Apps/lifx-react/my-app/src/ListLights/ListLights.js"],"names":["Component","Button","Card","Accordion","token","ListLights","state","lightInfo","lightLabels","fetchData","componentDidMount","url","fetch","method","headers","then","response","json","lightProps","console","log","length","setState","i","joined","concat","catch","error","render","lightLables","map","listitem","button"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\nvar token = \"Bearer c21a99f98f3d64bce53933d23097cbd4fb880ecf476037f82be4c85eb84ce344\";\r\n\r\nclass ListLights extends Component{\r\n    state = {\r\n        lightInfo: \"\",\r\n        lightLabels: [],\r\n    }\r\n\r\n    fetchData(){}\r\n\r\n    componentDidMount(){\r\n       \r\n        const url = \"https://api.lifx.com/v1/lights/all\";\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n          })\r\n            .then(response => response.json())\r\n            .then((lightProps) => {\r\n                console.log(lightProps.length)\r\n                console.log(lightProps[0]['label']);\r\n                this.setState({lightInfo: lightProps})\r\n                \r\n                for (let i = 0; i < this.state.lightInfo.length; i++){\r\n                    var joined = this.state.lightLabels.concat(this.state.lightInfo[i]['label']);\r\n                    console.log(this.state.lightInfo[i]['label'], \"test\")\r\n                    this.setState({ lightLabels: joined })\r\n                }\r\n\r\n                console.log(this.state.lightLabels)                \r\n              })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Accordion defaultActiveKey=\"1\">\r\n                {this.state.lightLables.map(listitem => (\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Accordion.Toggle as={button} variant=\"link\" eventKey=\"0\">\r\n                                \r\n                            </Accordion.Toggle>\r\n                        </Card.Header>\r\n                    </Card>\r\n                ))}\r\n            <Card>\r\n                <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                    Click me!\r\n                </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>Hello! I'm the body\r\n\r\n                </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card> \r\n            </Accordion>\r\n  \r\n            /* <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"col col-md-2\">\r\n                        <Button variant=\"primary\" onClick={this.fetchData.bind(this)}>List Lights</Button>\r\n                        <p></p>\r\n                            <ul className=\"list-group\">\r\n                                {this.state.lightLabels.map(listitem => (\r\n                                <li className=\"list-group-item list-group-item-primary\">\r\n                                    {listitem}\r\n                                </li>\r\n                                ))}\r\n                            </ul>\r\n                        <p></p>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div> */\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListLights;"]},"metadata":{},"sourceType":"module"}