{"ast":null,"code":"import _classCallCheck from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from\"react\";import Button from'react-bootstrap/Button';import{jsx as _jsx}from\"react/jsx-runtime\";var token=\"Bearer c21a99f98f3d64bce53933d23097cbd4fb880ecf476037f82be4c85eb84ce344\";var TogglePower=/*#__PURE__*/function(_Component){_inherits(TogglePower,_Component);var _super=_createSuper(TogglePower);function TogglePower(){var _this;_classCallCheck(this,TogglePower);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={lightInfo:_this.props.data.lightInfo};return _this;}_createClass(TogglePower,[{key:\"togglePower\",value:function togglePower(){var lightID=this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['id'];var urlPower=\"https://api.lifx.com/v1/lights/\".concat(lightID,\"/toggle\");fetch(urlPower,{method:'POST',headers:{'Authorization':token}}).then(function(response){return response.json();}).then(function(powerStatus){}).catch(function(error){console.error(error);});}},{key:\"lightSwitch\",value:function lightSwitch(){// Set constants for Light ID, Power Status, and Array Index\nvar arrIndex=this.props.data.lightLabels.indexOf(this.props.name);var lightID=this.props.data.lightInfo[arrIndex]['id'];var powerStatus=this.props.data.lightInfo[arrIndex]['power'];// If statement to determine whether to turn light off or on\nvar changePower=powerStatus===\"on\"?\"off\":\"on\";// API Call\nvar urlState=\"https://api.lifx.com/v1/lights/\".concat(lightID,\"/state\");var data={\"power\":changePower};fetch(urlState,{method:'PUT',headers:{'Authorization':token,'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){return response.json();}).then(function(lightState){console.log(lightState['results']);}).catch(function(error){console.error(error);});// Update State Object\nthis.updatePowerValue(changePower,arrIndex);// Update Parent State\nthis.updateParentState();}// Method to change the value of the power key\n},{key:\"updatePowerValue\",value:function updatePowerValue(powerStatus,index){var lightInfo=this.state.lightInfo;lightInfo[index]['power']=powerStatus;this.setState({lightInfo:lightInfo});}// Updates the main light state in the parent component\n},{key:\"updateParentState\",value:function updateParentState(){this.props.onGetChildState(this.state.lightInfo);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-md-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col col-md-2\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:this.lightSwitch.bind(this),children:\"Toggle Power\"})})})});}}]);return TogglePower;}(Component);export default TogglePower;","map":{"version":3,"sources":["C:/Users/61423/Documents/GitHub/hsantana92.github.io/src/TogglePower/TogglePower.js"],"names":["Component","Button","token","TogglePower","state","lightInfo","props","data","lightID","lightLabels","indexOf","name","urlPower","fetch","method","headers","then","response","json","powerStatus","catch","error","console","arrIndex","changePower","urlState","body","JSON","stringify","lightState","log","updatePowerValue","updateParentState","index","setState","onGetChildState","lightSwitch","bind"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nvar token = \"Bearer c21a99f98f3d64bce53933d23097cbd4fb880ecf476037f82be4c85eb84ce344\";\r\n\r\nclass TogglePower extends Component{\r\n    state = {\r\n        lightInfo: this.props.data.lightInfo,\r\n    }\r\n\r\n    \r\n\r\n    togglePower(){\r\n        const lightID = this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['id'];\r\n        const urlPower = `https://api.lifx.com/v1/lights/${lightID}/toggle`;\r\n        fetch(urlPower, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n          })\r\n            .then(response => response.json())\r\n            .then((powerStatus) => {\r\n              })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n    }\r\n\r\n    lightSwitch(){\r\n        // Set constants for Light ID, Power Status, and Array Index\r\n        const arrIndex = this.props.data.lightLabels.indexOf(this.props.name)\r\n        const lightID = this.props.data.lightInfo[arrIndex]['id'];\r\n        var powerStatus = this.props.data.lightInfo[arrIndex]['power']\r\n\r\n        // If statement to determine whether to turn light off or on\r\n        const changePower = (powerStatus === \"on\") ? \"off\" : \"on\"\r\n\r\n        // API Call\r\n        const urlState = `https://api.lifx.com/v1/lights/${lightID}/state`;\r\n        const data = {\r\n            \"power\": changePower\r\n        }\r\n        fetch(urlState, {   \r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n          })\r\n            .then(response => response.json())\r\n            .then((lightState) => {\r\n                console.log(lightState['results'])\r\n              })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n\r\n        // Update State Object\r\n        this.updatePowerValue(changePower, arrIndex)\r\n\r\n        // Update Parent State\r\n        this.updateParentState()\r\n    }\r\n\r\n    // Method to change the value of the power key\r\n    updatePowerValue(powerStatus, index){\r\n        let lightInfo = this.state.lightInfo;\r\n        lightInfo[index]['power'] = powerStatus;\r\n        this.setState({lightInfo : lightInfo})\r\n    }\r\n\r\n    // Updates the main light state in the parent component\r\n    updateParentState(){\r\n        this.props.onGetChildState(this.state.lightInfo);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"col col-md-2\">\r\n                        <Button variant=\"primary\" onClick={this.lightSwitch.bind(this)}>Toggle Power</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TogglePower;"]},"metadata":{},"sourceType":"module"}