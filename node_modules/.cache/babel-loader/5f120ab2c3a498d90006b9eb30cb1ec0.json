{"ast":null,"code":"import _classCallCheck from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from\"react\";import Button from'react-bootstrap/Button';import{withStyles}from'@material-ui/core/styles';import Slider from'@material-ui/core/Slider';import Typography from'@material-ui/core/Typography';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var token=\"Bearer c21a99f98f3d64bce53933d23097cbd4fb880ecf476037f82be4c85eb84ce344\";var StyledSlider=withStyles({root:{},track:{},rail:{},thumb:{}})(Slider);var SetBrightness=/*#__PURE__*/function(_Component){_inherits(SetBrightness,_Component);var _super=_createSuper(SetBrightness);function SetBrightness(){var _this;_classCallCheck(this,SetBrightness);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={brightness:\"1.0\",lightInfo:_this.props.data.lightInfo};return _this;}_createClass(SetBrightness,[{key:\"brightnessSet\",value:function brightnessSet(){// Set constants for Light ID and Array Index\nvar arrIndex=this.props.data.lightLabels.indexOf(this.props.name);var lightID=this.props.data.lightInfo[arrIndex]['id'];// Set API Call URL\nvar urlState=\"https://api.lifx.com/v1/lights/\".concat(lightID,\"/state\");// Set data to be updated depending on the selected value on the slider\nvar data={\"brightness\":this.state.brightness};// CALL API\nfetch(urlState,{method:'PUT',headers:{'Authorization':token,'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){return response.json();}).then(function(lightState){console.log(lightState['results']);}).catch(function(error){console.error(error);});// Update State Object\nthis.updateColorValue(this.state.brightness,arrIndex);// Update Parent State\nthis.updateParentState();}// Method to change the value of the color key\n},{key:\"updateColorValue\",value:function updateColorValue(brightnessVal,index){var lightInfo=this.state.lightInfo;lightInfo[index]['brightness']=brightnessVal;this.setState({lightInfo:lightInfo});}// Updates the main light state in the parent component\n},{key:\"updateParentState\",value:function updateParentState(){this.props.onGetChildState(this.state.lightInfo);}},{key:\"valuetext\",value:function valuetext(value){return value;}},{key:\"sliderChange\",value:function sliderChange(event,value){console.log(value);this.setState({brightness:value});this.brightnessSet();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{id:\"non-linear-slider\",gutterBottom:true,children:\"Adjust Brightness\"}),/*#__PURE__*/_jsx(StyledSlider,{defaultValue:this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['brightness'],getAriaValueText:this.valuetext.bind(this),onChangeCommitted:this.sliderChange.bind(this),\"aria-labelledby\":\"discrete-slider-small-steps\",step:0.1,marks:true,min:0.0,max:1.0,valueLabelDisplay:\"off\"})]});}}]);return SetBrightness;}(Component);export default SetBrightness;","map":{"version":3,"sources":["C:/Users/61423/Documents/GitHub/hsantana92.github.io/src/SetBrightness/SetBrightness.js"],"names":["Component","Button","withStyles","Slider","Typography","token","StyledSlider","root","track","rail","thumb","SetBrightness","state","brightness","lightInfo","props","data","arrIndex","lightLabels","indexOf","name","lightID","urlState","fetch","method","headers","body","JSON","stringify","then","response","json","lightState","console","log","catch","error","updateColorValue","updateParentState","brightnessVal","index","setState","onGetChildState","value","event","brightnessSet","valuetext","bind","sliderChange"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nvar token = \"Bearer c21a99f98f3d64bce53933d23097cbd4fb880ecf476037f82be4c85eb84ce344\";\r\n\r\nconst StyledSlider = withStyles({\r\n    root: {\r\n    },\r\n    track: {\r\n\r\n    },\r\n    rail: {\r\n\r\n    },\r\n    thumb: {\r\n\r\n    },\r\n\r\n\r\n  })(Slider);\r\n\r\n\r\n\r\nclass SetBrightness extends Component{\r\n    state = {\r\n        brightness: \"1.0\",\r\n        lightInfo: this.props.data.lightInfo\r\n    }\r\n\r\n\r\n    brightnessSet(){     \r\n        // Set constants for Light ID and Array Index\r\n        const arrIndex = this.props.data.lightLabels.indexOf(this.props.name)\r\n        const lightID = this.props.data.lightInfo[arrIndex]['id'];   \r\n\r\n        // Set API Call URL\r\n        const urlState = `https://api.lifx.com/v1/lights/${lightID}/state`;\r\n\r\n        // Set data to be updated depending on the selected value on the slider\r\n        const data = {\r\n            \"brightness\": this.state.brightness\r\n            }\r\n\r\n        // CALL API\r\n        fetch(urlState, {   \r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n          })\r\n            .then(response => response.json())\r\n            .then((lightState) => {\r\n                console.log(lightState['results'])\r\n              })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n\r\n            // Update State Object\r\n            this.updateColorValue(this.state.brightness, arrIndex)\r\n\r\n            // Update Parent State\r\n            this.updateParentState()\r\n    }\r\n\r\n    // Method to change the value of the color key\r\n    updateColorValue(brightnessVal, index){\r\n        let lightInfo = this.state.lightInfo;\r\n        lightInfo[index]['brightness'] = brightnessVal;\r\n        this.setState({lightInfo : lightInfo})\r\n    }\r\n\r\n    // Updates the main light state in the parent component\r\n    updateParentState(){\r\n        this.props.onGetChildState(this.state.lightInfo);\r\n    }\r\n\r\n    valuetext(value) {\r\n        return value;\r\n    }\r\n\r\n    sliderChange(event, value){\r\n        console.log(value)\r\n        this.setState({\r\n            brightness: value\r\n        })\r\n        this.brightnessSet()\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {/* <Button variant=\"primary\" onClick={this.brightnessSet.bind(this)}>Set Brightness</Button> */}\r\n                <Typography id=\"non-linear-slider\" gutterBottom>\r\n                    Adjust Brightness\r\n                </Typography>\r\n                <StyledSlider\r\n                    defaultValue={this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['brightness']}\r\n                    getAriaValueText={this.valuetext.bind(this)}\r\n                    onChangeCommitted={this.sliderChange.bind(this)}\r\n                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                    step={0.1}\r\n                    marks\r\n                    min={0.0}\r\n                    max={1.0}\r\n                    valueLabelDisplay=\"off\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SetBrightness;"]},"metadata":{},"sourceType":"module"}