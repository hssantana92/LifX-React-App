{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\61423\\\\Documents\\\\React Apps\\\\lifx-react\\\\my-app\\\\src\\\\TogglePower\\\\TogglePower.js\";\nimport { Component } from \"react\";\nimport ListLights from \"../ListLights/ListLights\";\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar token = \"Bearer c21a99f98f3d64bce53933d23097cbd4fb880ecf476037f82be4c85eb84ce344\";\n\nclass TogglePower extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lightStatus: \"\"\n    };\n  }\n\n  togglePower() {\n    const lightID = this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['id'];\n    const urlPower = `https://api.lifx.com/v1/lights/${lightID}/toggle`;\n    fetch(urlPower, {\n      method: 'POST',\n      headers: {\n        'Authorization': token\n      }\n    }).then(response => response.json()).then(powerStatus => {}).catch(error => {\n      console.error(error);\n    });\n  }\n\n  togglePower2() {\n    const lightID = this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['id'];\n    var powerStatus = this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['power'];\n    var power = powerStatus == \"on\" ? \"off\" : \"on\";\n    const urlPower = `https://api.lifx.com/v1/lights/${lightID}/state`;\n    const data = {\n      \"power\": power\n    };\n    fetch(urlPower, {\n      method: 'PUT',\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(lightState => {\n      console.log(lightState['results']);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-md-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.props.power\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.togglePower2.bind(this),\n            children: \"Toggle Power\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TogglePower;","map":{"version":3,"sources":["C:/Users/61423/Documents/React Apps/lifx-react/my-app/src/TogglePower/TogglePower.js"],"names":["Component","ListLights","Button","token","TogglePower","state","lightStatus","togglePower","lightID","props","data","lightInfo","lightLabels","indexOf","name","urlPower","fetch","method","headers","then","response","json","powerStatus","catch","error","console","togglePower2","power","body","JSON","stringify","lightState","log","render","bind"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport ListLights from \"../ListLights/ListLights\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nvar token = \"Bearer c21a99f98f3d64bce53933d23097cbd4fb880ecf476037f82be4c85eb84ce344\";\r\n\r\nclass TogglePower extends Component{\r\n    state = {\r\n        lightStatus: \"\",\r\n    }\r\n\r\n    \r\n\r\n    togglePower(){\r\n        const lightID = this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['id'];\r\n        const urlPower = `https://api.lifx.com/v1/lights/${lightID}/toggle`;\r\n        fetch(urlPower, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n          })\r\n            .then(response => response.json())\r\n            .then((powerStatus) => {\r\n              })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n    }\r\n\r\n    togglePower2(){\r\n        const lightID = this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['id'];\r\n        var powerStatus = this.props.data.lightInfo[this.props.data.lightLabels.indexOf(this.props.name)]['power']\r\n        \r\n        var power = (powerStatus == \"on\") ? \"off\" : \"on\"\r\n\r\n        const urlPower = `https://api.lifx.com/v1/lights/${lightID}/state`;\r\n        const data = {\r\n            \"power\": power\r\n        }\r\n        fetch(urlPower, {   \r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n          })\r\n            .then(response => response.json())\r\n            .then((lightState) => {\r\n                console.log(lightState['results'])\r\n              })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"col col-md-2\">\r\n                        <p>{this.props.power}</p>\r\n                        <Button variant=\"primary\" onClick={this.togglePower2.bind(this)}>Toggle Power</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TogglePower;"]},"metadata":{},"sourceType":"module"}