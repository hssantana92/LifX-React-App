{"ast":null,"code":"import _classCallCheck from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from\"react\";import{withStyles}from'@material-ui/core/styles';import Grid from'@material-ui/core/Grid';import Divider from'@material-ui/core/Divider';import FlashOnRoundedIcon from'@material-ui/icons/FlashOnRounded';import Typography from'@material-ui/core/Typography';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledGrid=withStyles(function(theme){return{root:{width:'fit-content',border:\"1px solid \".concat(theme.palette.divider),margin:\"auto\",borderRadius:theme.shape.borderRadius,backgroundColor:theme.palette.background.paper,color:theme.palette.text.secondary,'& svg':{margin:theme.spacing(1.5)},'& hr':{margin:theme.spacing(0,0.5)}}};})(Grid);var LightStatus=/*#__PURE__*/function(_Component){_inherits(LightStatus,_Component);var _super=_createSuper(LightStatus);function LightStatus(){_classCallCheck(this,LightStatus);return _super.apply(this,arguments);}_createClass(LightStatus,[{key:\"render\",value:function render(){var arrIndex=this.props.data.lightLabels.indexOf(this.props.name);var kelvinNumber=this.props.data.lightInfo[arrIndex]['color']['kelvin'];var iconColor=\"\";var iconSelector=\"lightbulb icon\";if(kelvinNumber===4500){iconColor=\"black\";iconSelector=\"lightbulb outline icon\";}else if(kelvinNumber===4000){iconColor=\"rgb(254,248,224)\";}else if(kelvinNumber===3500){iconColor=\"rgb(254,233,157)\";}else if(kelvinNumber===3000){iconColor=\"rgb(255,207,151)\";}else if(kelvinNumber===2500){iconColor=\"rgb(255,198,72)\";}else if(kelvinNumber===2000){iconColor=\"rgb(255,166,32)\";}else if(kelvinNumber===1500){iconColor=\"rgb(254,109,0)\";}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(StyledGrid,{container:true,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Typography,{style:{padding:\"10px\",color:\"black\",textDecoration:\"none\"},children:this.props.name}),/*#__PURE__*/_jsx(Divider,{style:{height:\"auto\"},orientation:\"vertical\",flexItem:true}),/*#__PURE__*/_jsx(FlashOnRoundedIcon,{style:{color:this.props.data.lightInfo[arrIndex]['power']===\"on\"?\"green\":\"#eb2a2a\",fontSize:\"30px\"}}),/*#__PURE__*/_jsx(Divider,{style:{height:\"auto\"},orientation:\"vertical\",flexItem:true}),/*#__PURE__*/_jsx(\"i\",{style:{fontSize:\"25px\",marginBottom:\"15px\",color:iconColor},className:iconSelector})]})});}}]);return LightStatus;}(Component);export default LightStatus;","map":{"version":3,"sources":["C:/Users/61423/Documents/GitHub/hsantana92.github.io/src/LightStatus/LightStatus.js"],"names":["Component","withStyles","Grid","Divider","FlashOnRoundedIcon","Typography","StyledGrid","theme","root","width","border","palette","divider","margin","borderRadius","shape","backgroundColor","background","paper","color","text","secondary","spacing","LightStatus","arrIndex","props","data","lightLabels","indexOf","name","kelvinNumber","lightInfo","iconColor","iconSelector","padding","textDecoration","height","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FlashOnRoundedIcon from '@material-ui/icons/FlashOnRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst StyledGrid = withStyles((theme) => ({\r\n    root: {\r\n        width: 'fit-content',\r\n        border: `1px solid ${theme.palette.divider}`,\r\n        margin: \"auto\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.secondary,\r\n        '& svg': {\r\n            margin: theme.spacing(1.5),\r\n          },\r\n          '& hr': {\r\n            margin: theme.spacing(0, 0.5),\r\n          },\r\n    }\r\n}))(Grid);\r\n\r\n\r\n\r\n\r\nclass LightStatus extends Component {\r\n\r\n    render(){\r\n        const arrIndex = this.props.data.lightLabels.indexOf(this.props.name);\r\n        const kelvinNumber = this.props.data.lightInfo[arrIndex]['color']['kelvin']\r\n        var iconColor = \"\"\r\n        var iconSelector = \"lightbulb icon\"\r\n\r\n        if (kelvinNumber === 4500){\r\n            iconColor = \"black\"\r\n            iconSelector = \"lightbulb outline icon\"\r\n        } else if (kelvinNumber === 4000){\r\n            iconColor = \"rgb(254,248,224)\"\r\n        } else if (kelvinNumber === 3500){\r\n            iconColor = \"rgb(254,233,157)\"\r\n        } else if (kelvinNumber === 3000){\r\n            iconColor = \"rgb(255,207,151)\"\r\n        } else if (kelvinNumber === 2500){\r\n            iconColor = \"rgb(255,198,72)\"\r\n        } else if (kelvinNumber === 2000){\r\n            iconColor = \"rgb(255,166,32)\"\r\n        } else if (kelvinNumber === 1500){\r\n            iconColor = \"rgb(254,109,0)\"\r\n        }\r\n\r\n        return(            \r\n            <div>\r\n                <StyledGrid container alignItems=\"center\">\r\n                    \r\n                    <Typography style={{padding: \"10px\", color: \"black\", textDecoration: \"none\"}}>{this.props.name}</Typography>\r\n                    <Divider style={{height: \"auto\"}}  orientation=\"vertical\" flexItem />\r\n                    <FlashOnRoundedIcon style={{color: (this.props.data.lightInfo[arrIndex]['power'] === \"on\") ? \"green\" : \"#eb2a2a\", fontSize: \"30px\"}}></FlashOnRoundedIcon>\r\n                    <Divider style={{height: \"auto\"}}  orientation=\"vertical\" flexItem />\r\n                    <i style={{fontSize: \"25px\", marginBottom: \"15px\", color: iconColor}} className={iconSelector}></i>\r\n                </StyledGrid>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LightStatus;"]},"metadata":{},"sourceType":"module"}