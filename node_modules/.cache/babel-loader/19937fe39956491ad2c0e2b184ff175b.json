{"ast":null,"code":"import _classCallCheck from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/61423/Documents/GitHub/hsantana92.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from'react';import Button from'react-bootstrap/Button';import Form from'react-bootstrap/Form';import ListLights from'../ListLights/ListLights';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var url=\"https://api.lifx.com/v1/lights/all\";var Authorise=/*#__PURE__*/function(_Component){_inherits(Authorise,_Component);var _super=_createSuper(Authorise);function Authorise(){var _this;_classCallCheck(this,Authorise);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={apiKey:\"\",authorised:false,display:\"\"};return _this;}_createClass(Authorise,[{key:\"onInputChange\",value:function onInputChange(event){this.setState({apiKey:event.target.value});}},{key:\"onKeySubmit\",value:function onKeySubmit(){var _this2=this;// Attempt to call API\nfetch(url,{method:'GET',headers:{'Authorization':\"Bearer \".concat(this.state.apiKey)}}).then(function(response){if(!response.ok){alert(\"Invalid key. Try again.\");throw new Error(\"HTTP Status \"+response.status);}return response.json();}).then(function(jsonResponse){_this2.setState({authorised:true,display:\"none\"});}).catch(function(error){console.log(error);});}},{key:\"render\",value:function render(){var isAuthorised=this.state.authorised;var displayComponent;if(isAuthorised){displayComponent=/*#__PURE__*/_jsx(ListLights,{apiKey:this.state.apiKey});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"300px\",margin:\"auto\",display:this.state.display},children:/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-2\",controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"API Key\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter API key\",onChange:this.onInputChange.bind(this)}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Please enter a valid LifX API key\"}),/*#__PURE__*/_jsx(Button,{style:{marginTop:\"10px\"},variant:\"primary\",onClick:this.onKeySubmit.bind(this),children:\"Submit\"})]})})}),displayComponent]});}}]);return Authorise;}(Component);export default Authorise;","map":{"version":3,"sources":["C:/Users/61423/Documents/GitHub/hsantana92.github.io/src/Authorise/Authorise.js"],"names":["Component","Button","Form","ListLights","url","Authorise","state","apiKey","authorised","display","event","setState","target","value","fetch","method","headers","then","response","ok","alert","Error","status","json","jsonResponse","catch","error","console","log","isAuthorised","displayComponent","width","margin","onInputChange","bind","marginTop","onKeySubmit"],"mappings":"4pBAAA,OAAQA,SAAR,KAAwB,OAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,oCAAZ,C,GAEMC,CAAAA,S,uUACFC,K,CAAQ,CACJC,MAAM,CAAE,EADJ,CAEJC,UAAU,CAAE,KAFR,CAGJC,OAAO,CAAE,EAHL,C,kEAMR,uBAAcC,KAAd,CAAoB,CAChB,KAAKC,QAAL,CAAc,CACVJ,MAAM,CAAEG,KAAK,CAACE,MAAN,CAAaC,KADX,CAAd,EAGH,C,2BAED,sBAAa,iBACT;AACAC,KAAK,CAACV,GAAD,CAAM,CACPW,MAAM,CAAE,KADD,CAEPC,OAAO,CAAE,CACL,iCAA2B,KAAKV,KAAL,CAAWC,MAAtC,CADK,CAFF,CAAN,CAAL,CAMKU,IANL,CAMU,SAASC,QAAT,CAAkB,CACpB,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAiB,CACbC,KAAK,CAAC,yBAAD,CAAL,CACA,KAAM,IAAIC,CAAAA,KAAJ,CAAU,eAAiBH,QAAQ,CAACI,MAApC,CAAN,CACH,CACD,MAAOJ,CAAAA,QAAQ,CAACK,IAAT,EAAP,CACH,CAZL,EAaKN,IAbL,CAaU,SAACO,YAAD,CAAkB,CACpB,MAAI,CAACb,QAAL,CAAc,CACVH,UAAU,CAAE,IADF,CAEVC,OAAO,CAAE,MAFC,CAAd,EAIH,CAlBL,EAmBKgB,KAnBL,CAmBW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CArBL,EAsBH,C,sBAED,iBAAQ,CACJ,GAAMG,CAAAA,YAAY,CAAG,KAAKvB,KAAL,CAAWE,UAAhC,CACA,GAAIsB,CAAAA,gBAAJ,CAEA,GAAID,YAAJ,CAAiB,CACbC,gBAAgB,cAAG,KAAC,UAAD,EAAY,MAAM,CAAE,KAAKxB,KAAL,CAAWC,MAA/B,EAAnB,CACH,EACD,mBACI,oCACA,YAAK,KAAK,CAAE,CAACwB,KAAK,CAAC,OAAP,CAAgBC,MAAM,CAAE,MAAxB,CAAgCvB,OAAO,CAAE,KAAKH,KAAL,CAAWG,OAApD,CAAZ,uBACI,KAAC,IAAD,wBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,gBAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,sBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,eAAtC,CAAsD,QAAQ,CAAE,KAAKwB,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAhE,EAFJ,cAGI,KAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,YAArB,+CAHJ,cAMI,KAAC,MAAD,EAAQ,KAAK,CAAE,CAACC,SAAS,CAAE,MAAZ,CAAf,CAAoC,OAAO,CAAC,SAA5C,CAAsD,OAAO,CAAE,KAAKC,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAA/D,oBANJ,GADJ,EADJ,EADA,CAgBKJ,gBAhBL,GADJ,CAoBH,C,uBAlEmB9B,S,EAsExB,cAAeK,CAAAA,SAAf","sourcesContent":["import {Component} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ListLights from '../ListLights/ListLights';\r\n\r\nconst url = \"https://api.lifx.com/v1/lights/all\";\r\n\r\nclass Authorise extends Component{\r\n    state = {\r\n        apiKey: \"\",\r\n        authorised: false,\r\n        display: \"\",\r\n    }\r\n\r\n    onInputChange(event){\r\n        this.setState({\r\n            apiKey: event.target.value\r\n        })\r\n    }\r\n\r\n    onKeySubmit(){\r\n        // Attempt to call API\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${this.state.apiKey}`\r\n            },\r\n          })\r\n            .then(function(response){\r\n                if (!response.ok){\r\n                    alert(\"Invalid key. Try again.\")\r\n                    throw new Error(\"HTTP Status \" + response.status);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((jsonResponse) => {\r\n                this.setState({\r\n                    authorised: true,\r\n                    display: \"none\"\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const isAuthorised = this.state.authorised;\r\n        let displayComponent;\r\n\r\n        if (isAuthorised){\r\n            displayComponent = <ListLights apiKey={this.state.apiKey}></ListLights>\r\n        };\r\n        return (\r\n            <div>\r\n            <div style={{width:\"300px\", margin: \"auto\", display: this.state.display}}>\r\n                <Form>\r\n                    <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>API Key</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter API key\" onChange={this.onInputChange.bind(this)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            Please enter a valid LifX API key\r\n                        </Form.Text>\r\n                        <Button style={{marginTop: \"10px\"}} variant=\"primary\" onClick={this.onKeySubmit.bind(this)}>\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Group>\r\n                </Form>\r\n                \r\n            </div>\r\n                {displayComponent}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Authorise;"]},"metadata":{},"sourceType":"module"}