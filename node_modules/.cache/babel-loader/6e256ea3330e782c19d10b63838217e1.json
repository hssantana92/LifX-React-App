{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\61423\\\\Documents\\\\React Apps\\\\lifx-react\\\\my-app\\\\src\\\\LightStatus\\\\LightStatus.js\";\nimport { Component } from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport FlashOnRoundedIcon from '@material-ui/icons/FlashOnRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGrid = withStyles(theme => ({\n  root: {\n    width: 'fit-content',\n    border: `1px solid ${theme.palette.divider}`,\n    margin: \"auto\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.secondary,\n    '& svg': {\n      margin: theme.spacing(1.5)\n    },\n    '& hr': {\n      margin: theme.spacing(0, 0.5)\n    }\n  }\n}))(Grid);\n\nclass LightStatus extends Component {\n  render() {\n    const arrIndex = this.props.data.lightLabels.indexOf(this.props.name);\n    const kelvinNumber = this.props.data.lightInfo[arrIndex]['color']['kelvin'];\n    var iconColor = \"uknown\";\n\n    if (kelvinNumber === 4500) {\n      iconColor = \"white\";\n    } else if (kelvinNumber === 4000) {\n      iconColor = \"rgb(254,248,224)\";\n    } else if (kelvinNumber === 3500) {\n      iconColor = \"rgb(254,233,157)\";\n    } else if (kelvinNumber === 3000) {\n      iconColor = \"rgb(254,233,157)\";\n    } else if (kelvinNumber === 3500) {\n      iconColor = \"rgb(254,233,157)\";\n    } else if (kelvinNumber === 3500) {\n      iconColor = \"rgb(254,233,157)\";\n    } else if (kelvinNumber === 3500) {\n      iconColor = \"rgb(254,233,157)\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StyledGrid, {\n        container: true,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          style: {\n            padding: \"10px\",\n            color: \"black\",\n            textDecoration: \"none\"\n          },\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            height: \"auto\"\n          },\n          orientation: \"vertical\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FlashOnRoundedIcon, {\n          style: {\n            color: this.props.data.lightInfo[arrIndex]['power'] === \"on\" ? \"green\" : \"red\",\n            fontSize: \"30px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            height: \"auto\"\n          },\n          orientation: \"vertical\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            fontSize: \"25px\",\n            marginBottom: \"15px\",\n            color: iconColor\n          },\n          class: \"lightbulb icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LightStatus;","map":{"version":3,"sources":["C:/Users/61423/Documents/React Apps/lifx-react/my-app/src/LightStatus/LightStatus.js"],"names":["Component","withStyles","Grid","Divider","FlashOnRoundedIcon","StyledGrid","theme","root","width","border","palette","divider","margin","borderRadius","shape","backgroundColor","background","paper","color","text","secondary","spacing","LightStatus","render","arrIndex","props","data","lightLabels","indexOf","name","kelvinNumber","lightInfo","iconColor","padding","textDecoration","height","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FlashOnRoundedIcon from '@material-ui/icons/FlashOnRounded';\r\n\r\n\r\nconst StyledGrid = withStyles((theme) => ({\r\n    root: {\r\n        width: 'fit-content',\r\n        border: `1px solid ${theme.palette.divider}`,\r\n        margin: \"auto\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.secondary,\r\n        '& svg': {\r\n            margin: theme.spacing(1.5),\r\n          },\r\n          '& hr': {\r\n            margin: theme.spacing(0, 0.5),\r\n          },\r\n    }\r\n}))(Grid);\r\n\r\n\r\n\r\n\r\nclass LightStatus extends Component {\r\n\r\n    render(){\r\n        const arrIndex = this.props.data.lightLabels.indexOf(this.props.name);\r\n        const kelvinNumber = this.props.data.lightInfo[arrIndex]['color']['kelvin']\r\n        var iconColor = \"uknown\"\r\n\r\n        if (kelvinNumber === 4500){\r\n            iconColor = \"white\";\r\n        } else if (kelvinNumber === 4000){\r\n            iconColor = \"rgb(254,248,224)\"\r\n        } else if (kelvinNumber === 3500){\r\n            iconColor = \"rgb(254,233,157)\"\r\n        } else if (kelvinNumber === 3000){\r\n            iconColor = \"rgb(254,233,157)\"\r\n        } else if (kelvinNumber === 3500){\r\n            iconColor = \"rgb(254,233,157)\"\r\n        } else if (kelvinNumber === 3500){\r\n            iconColor = \"rgb(254,233,157)\"\r\n        } else if (kelvinNumber === 3500){\r\n            iconColor = \"rgb(254,233,157)\"\r\n        }\r\n\r\n        return(            \r\n            <div>\r\n                <StyledGrid container alignItems=\"center\">\r\n                    \r\n                    <text style={{padding: \"10px\", color: \"black\", textDecoration: \"none\"}}>{this.props.name}</text>\r\n                    <Divider style={{height: \"auto\"}}  orientation=\"vertical\" flexItem />\r\n                    <FlashOnRoundedIcon style={{color: (this.props.data.lightInfo[arrIndex]['power'] === \"on\") ? \"green\" : \"red\", fontSize: \"30px\"}}></FlashOnRoundedIcon>\r\n                    <Divider style={{height: \"auto\"}}  orientation=\"vertical\" flexItem />\r\n                    <i style={{fontSize: \"25px\", marginBottom: \"15px\", color: iconColor}} class=\"lightbulb icon\"></i>\r\n                </StyledGrid>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LightStatus;"]},"metadata":{},"sourceType":"module"}